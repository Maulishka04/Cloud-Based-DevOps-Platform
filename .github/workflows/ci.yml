name: CI
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install and test users service
        working-directory: ./services/users
        run: |
          npm ci
          npm test

      - name: Install and test frontend (build only)
        working-directory: ./frontend
        run: |
          npm ci
          npm run build

  build-and-publish:
    needs: lint-and-test
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push users-service image
        working-directory: ./services/users
        run: |
          IMAGE=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_USERS_REPO }}:$(echo $GITHUB_SHA | cut -c1-7)
          docker build -t $IMAGE .
          docker push $IMAGE
          echo "image=$IMAGE" >> $GITHUB_OUTPUT

      - name: Build and push ml-service image
        working-directory: ./services/ml-service
        run: |
          IMAGE=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_ML_REPO }}:$(echo $GITHUB_SHA | cut -c1-7)
          docker build -t $IMAGE .
          docker push $IMAGE

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-images
          path: |
            services/users/Dockerfile
            services/ml-service/Dockerfile
